<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	        	
	<!-- 3. Using a Hibernate DAO.  -->
	<context:annotation-config/>
	<context:component-scan base-package="com.aztec.springdemo.hibernate"/>
		
	<!-- The JPA and DataSource definitions -->
    <jpa:repositories base-package="com.aztec.springdemo.hibernate.repository"
                      transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>
              	 
	 <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
	    <property name="entityManagerFactory" ref="entityManagerFactory"/>
	 </bean>
	 <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/>
	 <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="persistenceUnitName" value="persistenceUnit" />
	    <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
	 </bean>
	 	    
	 	    
	<!-- Example Transaction Config >
  	<tx:advice id="txAdvice" transaction-manager="transactionManager">
  		<tx:attributes>
    		<tx:method name="get*" read-only="true"/> 
    		<tx:method name="*"/>
  		</tx:attributes>
  	</tx:advice>
   
  	<aop:config>
  		<aop:pointcut id="hibernateServiceOperation" expression="execution(* com.aztec.springdemo.hibernate.HibernateService.*(..))"/>
  		<aop:advisor advice-ref="txAdvice" pointcut-ref="hibernateServiceOperation"/>
  	</aop:config-->
  	
  	
	<!-- 4. Using Spring JDBC -->
    <bean id="JdbcServiceBean" class="com.aztec.springdemo.jdbc.JdbcService">
		<constructor-arg><ref bean="JdbcDao"/></constructor-arg>
	</bean>
  	
	<bean id="JdbcDao" class="com.aztec.springdemo.jdbc.JdbcDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>
		 	    
	<!-- Simple Spring Profiles example: swap in a different datasource for 'dev' and 'prod' -->
    <beans profile="dev">                             
     	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
        	<property name="driverClassName" value="org.h2.Driver"/>
        	<property name="url" value="jdbc:h2:tcp://localhost/~/databases/springdemo/dev;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE"/>
        	<property name="username" value="sa"/>
     		<property name="password" value=""/>
	 	</bean>
	</beans>
	 
    <beans profile="prod">                             
    	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
        	<property name="driverClassName" value="org.h2.Driver"/>
        	<property name="url" value="jdbc:h2:tcp://localhost/~/databases/springdemo/prod;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE"/>
        	<property name="username" value="sa"/>
     		<property name="password" value=""/>
	 	</bean>
	</beans>
	 
</beans>